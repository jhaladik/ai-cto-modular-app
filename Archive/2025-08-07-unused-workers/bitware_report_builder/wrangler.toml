name = "bitware-report-builder"
main = "index.ts"
compatibility_date = "2024-07-22"
compatibility_flags = [ "nodejs_compat" ]

# Worker configuration
minify = true

# D1 Database binding for report generation and analytics
[[d1_databases]]
binding = "REPORT_GENERATION_DB" 
database_name = "bitware-report-generation-db"
database_id = "72e9e1b7-ed9b-4d65-9530-11ec28e7d3b0" # Set during deployment

# Content Classifier Database binding (for reading analyzed articles)
[[d1_databases]]
binding = "CONTENT_ANALYSIS_DB"
database_name = "bitware-content-analysis-db" 
database_id = "752330ba-0eca-47f0-9416-ecee9419b685" # Should match content_classifier

# Feed Fetcher Database binding (for reading article metadata)
[[d1_databases]]
binding = "FETCHED_ARTICLES_DB"
database_name = "fetched-articles-db"
database_id = "3dc8e03d-327a-4626-b50f-d611649a9582" # Should match feed_fetcher

# KV Storage binding for report caching
[[kv_namespaces]]
binding = "REPORT_CACHE"
id = "49b2ad8b2ae74f46971d9f1a0e7811d6"          # Set during deployment
preview_id = "b38321feb6c148c4bfcade4b2906a2af"    # For staging

# R2 Storage (optional - for storing large reports)
# [[r2_buckets]]
# binding = "REPORT_STORAGE"
# bucket_name = "bitware-intelligence-reports"

# Environment variables
[vars]

# Report Generation Settings
AI_MODEL = "gpt-4o-mini"
DEFAULT_REPORT_TYPE = "executive_summary"
DEFAULT_TIME_RANGE = "7d"
CACHE_TTL_HOURS = 1

# Output Configuration  
SUPPORTED_FORMATS = "json,html,markdown,email"
DEFAULT_OUTPUT_FORMAT = "json"
MAX_ARTICLES_PER_REPORT = 200
MIN_RELEVANCE_THRESHOLD = 0.0

# Cost Management
MAX_COST_PER_REPORT = 2.0    # USD
DAILY_COST_LIMIT = 100.0     # USD
TOKEN_RATE_LIMIT = 100000    # tokens per hour

# Performance Settings
REQUEST_TIMEOUT_MS = 120000   # 2 minutes for complex reports
RETRY_ATTEMPTS = 2
RETRY_DELAY_MS = 2000

# Report Quality Settings
MIN_CONFIDENCE_SCORE = 0.5
DATA_QUALITY_THRESHOLD = 0.7
REQUIRE_MULTIPLE_SOURCES = true

# Public report viewing settings
ENABLE_PUBLIC_REPORTS = true
PUBLIC_REPORT_TTL_DAYS = 30

# Integration settings
CONTENT_CLASSIFIER_URL = "https://bitware-content-classifier.jhaladik.workers.dev"
FEED_FETCHER_URL = "https://bitware-feed-fetcher.jhaladik.workers.dev"

# Analytics and monitoring
ENABLE_ANALYTICS = true
TRACK_USER_ENGAGEMENT = true

# Email report settings (if using email output)
EMAIL_FROM_NAME = "Bitware AI Factory"
EMAIL_REPLY_TO = "noreply@bitware.ai"

# Secrets that need to be set via wrangler secret put:
# wrangler secret put OPENAI_API_KEY
# wrangler secret put WORKER_SHARED_SECRET  
# wrangler secret put CLIENT_API_KEY

# Optional email service secrets (if using email reports):
# wrangler secret put SENDGRID_API_KEY
# wrangler secret put SMTP_HOST
# wrangler secret put SMTP_USER
# wrangler secret put SMTP_PASS

# Database setup commands:
# wrangler d1 create bitware-report-generation-db
# wrangler d1 execute bitware-report-generation-db --file=schema.sql

# KV namespace setup:
# wrangler kv:namespace create "REPORT_CACHE"
# wrangler kv:namespace create "REPORT_CACHE" --preview